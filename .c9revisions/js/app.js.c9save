{"ts":1377445345503,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated by CoffeeScript 1.6.3\n(function() {\n  define([\"backbone\", \"marionette\", \"msgbus\", \"apps/load\"], function(Backbone, Marionette, msgBus) {\n    var app;\n    app = new Marionette.Application();\n    app.rootRoute = \"about\";\n    app.authRoute = \"top\";\n    app.addRegions({\n      headerRegion: \"#header-region\",\n      mainRegion: \"#main-region\",\n      footerRegion: \"#footer-region\",\n      jackRegion: \"#jack-region\"\n    });\n    app.on(\"initialize:before\", function(options) {\n      if (options == null) {\n        options = {};\n      }\n      return console.log(\"init:before\", options);\n    });\n    msgBus.reqres.setHandler(\"default:region\", function() {\n      return app.mainRegion;\n    });\n    msgBus.reqres.setHandler(\"jack:region\", function() {\n      return app.jackRegion;\n    });\n    msgBus.reqres.setHandler(\"header:region\", function() {\n      return app.headerRegion;\n    });\n    msgBus.reqres.setHandler(\"footer:region\", function() {\n      return app.footerRegion;\n    });\n    msgBus.reqres.setHandler(\"main:region\", function() {\n      return app.mainRegion;\n    });\n    msgBus.commands.setHandler(\"register:instance\", function(instance, id) {\n      return app.register(instance, id);\n    });\n    msgBus.commands.setHandler(\"unregister:instance\", function(instance, id) {\n      return app.unregister(instance, id);\n    });\n    app.on(\"initialize:after\", function(options) {\n      var appstate, frag, match;\n      if (options == null) {\n        options = {};\n      }\n      console.log(\"init:after>>\");\n      appstate = msgBus.reqres.request(\"get:current:appstate\");\n      if (Backbone.history) {\n        Backbone.history.start();\n        frag = Backbone.history.fragment;\n        match = /access_token/i.test(frag);\n        if (match) {\n          appstate.set(\"accessToken\", frag.split(\"=\")[1]);\n          appstate.set(\"loginStatus\", true);\n          console.log(\"top route\", this.authRoute);\n          return this.navigate(this.authRoute, {\n            trigger: true\n          });\n        } else {\n          if (this.getCurrentRoute() === null) {\n            return this.navigate(this.rootRoute, {\n              trigger: true\n            });\n          }\n        }\n      }\n    });\n    app.addInitializer(function(options) {\n      console.log(\"addinitializers\");\n      msgBus.commands.execute(\"start:header:app\");\n      msgBus.commands.execute(\"start:footer:app\");\n      msgBus.commands.execute(\"start:d3:app\");\n      msgBus.commands.execute(\"start:about:app\");\n      msgBus.commands.execute(\"start:oauth:app\");\n      return msgBus.commands.execute(\"start:top:app\");\n    });\n    return app;\n  });\n\n}).call(this);\n"]],"start1":0,"start2":0,"length1":0,"length2":2625}]],"length":2625}
