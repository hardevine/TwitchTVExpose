// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["entities/_backbone", "msgbus"], function(_Backbone, msgBus) {
    var API, Game, GamesCollection, _ref, _ref1;
    Game = (function(_super) {
      __extends(Game, _super);

      function Game() {
        _ref = Game.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      return Game;

    })(_Backbone.Model);
    GamesCollection = (function(_super) {
      __extends(GamesCollection, _super);

      function GamesCollection() {
        _ref1 = GamesCollection.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      GamesCollection.prototype.model = Game;

      GamesCollection.prototype.parse = function(resp) {
        return resp.top;
      };

      return GamesCollection;

    })(_Backbone.Collection);
    API = {
      getGames: function(url, params) {
        var games;
        if (params == null) {
          params = {};
        }
        _.defaults(params, {
          oauth_token: msgBus.reqres.request("get:current:token")
        });
        games = new GamesCollection;
        games.url = "https://api.twitch.tv/kraken/" + url + "?callback=?";
        games.fetch({
          reset: true,
          data: params
        });
        return games;
      }
    };
    return msgBus.reqres.setHandler("games:top:entities", function() {
      return API.getGames("games/top", {
        limit: 12
      });
    });
  });

  /*
      App.reqres.setHandler "search:movie:entities", (searchTerm) ->
          #update me
      	API.getMovies "movies",
      		q: $.trim(searchTerm)
  
      App.reqres.setHandler "theatre:movie:entities", ->
          #update me
      	API.getMovies "lists/movies/in_theaters",
      		page_limit: 10
      		page: 1
  
      App.reqres.setHandler "upcoming:movie:entities", ->
          #update me
      	API.getMovies "lists/movies/upcoming",
      		page_limit: 10
      		page: 1
  */


}).call(this);
