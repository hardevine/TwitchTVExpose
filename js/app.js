// Generated by CoffeeScript 1.6.3
(function() {
  define(["backbone", "marionette", "msgbus", "apps/load"], function(Backbone, Marionette, msgBus) {
    var app;
    app = new Marionette.Application();
    app.rootRoute = "about";
    app.authRoute = "top";
    app.addRegions({
      headerRegion: "#header-region",
      mainRegion: "#main-region",
      footerRegion: "#footer-region",
      jackRegion: "#jack-region"
    });
    app.on("initialize:before", function(options) {
      if (options == null) {
        options = {};
      }
      return console.log("init:before", options);
    });
    msgBus.reqres.setHandler("default:region", function() {
      return app.mainRegion;
    });
    msgBus.reqres.setHandler("jack:region", function() {
      return app.jackRegion;
    });
    msgBus.reqres.setHandler("header:region", function() {
      return app.headerRegion;
    });
    msgBus.reqres.setHandler("footer:region", function() {
      return app.footerRegion;
    });
    msgBus.reqres.setHandler("main:region", function() {
      return app.mainRegion;
    });
    msgBus.commands.setHandler("register:instance", function(instance, id) {
      return app.register(instance, id);
    });
    msgBus.commands.setHandler("unregister:instance", function(instance, id) {
      return app.unregister(instance, id);
    });
    app.on("initialize:after", function(options) {
      var appstate, frag, match;
      if (options == null) {
        options = {};
      }
      console.log("init:after>>");
      appstate = msgBus.reqres.request("get:current:appstate");
      if (Backbone.history) {
        Backbone.history.start();
        frag = Backbone.history.fragment;
        match = /access_token/i.test(frag);
        if (match) {
          appstate.set("accessToken", frag.split("=")[1]);
          appstate.set("loginStatus", true);
          console.log("top route", this.authRoute);
          return this.navigate(this.authRoute, {
            trigger: true
          });
        } else {
          console.log("else statement");
          if (this.getCurrentRoute() === null) {
            return this.navigate(this.rootRoute, {
              trigger: true
            });
          }
        }
      }
    });
    app.addInitializer(function(options) {
      console.log("addinitializers");
      msgBus.commands.execute("start:header:app");
      msgBus.commands.execute("start:footer:app");
      msgBus.commands.execute("start:d3:app");
      msgBus.commands.execute("start:about:app");
      msgBus.commands.execute("start:oauth:app");
      return msgBus.commands.execute("start:top:app");
    });
    return app;
  });

}).call(this);
