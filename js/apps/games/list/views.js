// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['apps/games/list/templates', 'views/_base', 'msgbus', 'views/bubble'], function(Templates, AppView, msgBus, BubbleChart) {
    var GameItem, GamesBubbleView, GamesLayout, TopGameList, _ref, _ref1, _ref2, _ref3;
    GameItem = (function(_super) {
      __extends(GameItem, _super);

      function GameItem() {
        _ref = GameItem.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      GameItem.prototype.template = _.template(Templates.gameitem);

      GameItem.prototype.tagName = "li";

      GameItem.prototype.className = "col-md-2 col-sm-4 col-xs-12 game";

      GameItem.prototype.triggers = {
        "click": "game:item:clicked"
      };

      return GameItem;

    })(AppView.ItemView);
    return {
      TopGameList: TopGameList = (function(_super) {
        __extends(TopGameList, _super);

        function TopGameList() {
          this.checkScroll = __bind(this.checkScroll, this);
          _ref1 = TopGameList.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        TopGameList.prototype.template = _.template(Templates.gameslist);

        TopGameList.prototype.itemView = GameItem;

        TopGameList.prototype.id = "gamelist";

        TopGameList.prototype.itemViewContainer = "#gameitems";

        TopGameList.prototype.events = {
          "scroll": "checkScroll"
        };

        TopGameList.prototype.checkScroll = function(e) {
          var margin, scrollTop, virtualHeight;
          virtualHeight = this.$("> div").height();
          scrollTop = this.$el.scrollTop() + this.$el.height();
          margin = 200;
          if ((scrollTop + margin) >= virtualHeight) {
            return this.trigger("scroll:more");
          }
        };

        return TopGameList;

      })(AppView.CompositeView),
      GamesBubbleView: GamesBubbleView = (function(_super) {
        __extends(GamesBubbleView, _super);

        function GamesBubbleView() {
          _ref2 = GamesBubbleView.__super__.constructor.apply(this, arguments);
          return _ref2;
        }

        GamesBubbleView.prototype.template = _.template(Templates.gamesbubble);

        GamesBubbleView.prototype.id = "gamesbubble";

        GamesBubbleView.prototype.onShow = function() {
          var $height, $width;
          $width = this.$el.outerWidth(false);
          $height = Math.floor($width * 9 / 16);
          this.chart = new BubbleChart(this.collection, this.el, $width, $height);
          this.chart.start();
          return this.chart.display();
        };

        return GamesBubbleView;

      })(AppView.ItemView),
      Layout: GamesLayout = (function(_super) {
        __extends(GamesLayout, _super);

        function GamesLayout() {
          _ref3 = GamesLayout.__super__.constructor.apply(this, arguments);
          return _ref3;
        }

        GamesLayout.prototype.template = _.template(Templates.layout);

        GamesLayout.prototype.regions = {
          gameRegion: "#game-region"
        };

        GamesLayout.prototype.events = {
          "click .bubble": "bubble",
          "click .grid": "grid"
        };

        GamesLayout.prototype.bubble = function() {
          return this.trigger("show:bubble");
        };

        GamesLayout.prototype.grid = function() {
          return this.trigger("show");
        };

        return GamesLayout;

      })(AppView.Layout)
    };
  });

}).call(this);
